<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">


	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>jdbcPackage/jdbc.properties</value>
		</property>
	</bean>

	<bean id="dataSourceId"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="entityManagerFactoryId"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSourceId" />
		<property name="packagesToScan" value="_05.jpa.example2.domain" /> 
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter" />
		</property>
	 	<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.weaving" value="false" />
			</map>
		</property>
	</bean>

	<!-- packageToScan , normal sartlarda persistence.xml dosyasinda @Entity 
		olarak tanimladigimiz siniflarin bilgisini vermemiz gerekmektedir. 
		org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean 
		kullandigimizda packageToScan parameteresine @Entity siniflara sahip olan 
	 	package bilsini verebiliriz. -->

	<!-- default olarak META-INF/persistence.xml dosyasi JPA icin gereklidir. 
		istersek persistenceXmlLocation ile bu location bilgisinni degistirebiliriz. -->


	<context:component-scan base-package="_05.jpa.example2.dao _05.jpa.example2.service"/>
	
	<!-- x <bean id="personServiceId" class="_05.jpa.example2.service.PersonServiceImpl"> 
		<constructor-arg ref="personDAOImplId" /> </bean> <bean id="personDAOImplId" 
		class="_05.jpa.example2.dao.PersonDAOImpl"> <property name="entityManagerFactory" 
		ref="entityManagerFactoryId" /> </bean> -->
</beans>